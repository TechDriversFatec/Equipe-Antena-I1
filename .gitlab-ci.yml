image: maven:latest


stages:
    - test
    - build
    - create-image
    - deploy
    
variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

build:
  stage: build
  artifacts:
    paths:
      - target/*.jar
  script: 
    - $MAVEN_HOME/bin/mvn clean install -DskipTests 
    
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - .m2/repository/
      - build


test:
  stage: test
  script: 
    - $MAVEN_HOME/bin/mvn test


create-image:
  image: gradle:alpine
  stage: create-image
  tags:
    - deploy
  script:
    - cp target/*.jar .
    - sudo docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - sudo docker build -t projetoantenas/antenas-integracao .
    - sudo docker push projetoantenas/antenas-integracao


.gcloud: &gcloud
  - gcloud auth activate-service-account --key-file ~/gcloud-key.json
  - gcloud container clusters get-credentials $GCLOUD_CLUSTER

.prod_deploy: &prod_deploy
  image: google/cloud-sdk
  before_script: 
    - *gcloud
    - kubectl delete service $NOME_SERVICO
  script:
    - kubectl create deployment $NOME_SERVICO --image=projetoantenas/antenas-integracao:latest
    - kubectl expose deployment $NOME_SERVICO --type=LoadBalancer --port 80 --target-port 8080

deploy:
  <<: *prod_deploy
  when: manual
  only:
    - master





  